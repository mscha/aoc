#!/usr/bin/env raku
use v6.d;
$*OUT.out-buffer = False;   # Autoflush

# Advent of Code 2023 day 9 -- https://adventofcode.com/2023/day/9

class Series
{
    has Int @.values;

    sub differences(@val) { @val[1..*] Z- @val }

    sub next-value(*@val)
    {
        my @diff = differences(@val);
        if all(@diff) == 0 {
            return @val.tail;
        }
        else {
            return @val.tail + next-value(@diff);
        }
    }

    sub prev-value(*@val)
    {
        my @diff = differences(@val);
        if all(@diff) == 0 {
            return @val.head;
        }
        else {
            return @val.head - prev-value(@diff);
        }
    }

    method next { next-value(@!values) }
    method prev { prev-value(@!values) }
}

sub ints($str) { $str.comb(/'-'? \d+/)».Int }

sub MAIN(IO() $inputfile where *.f = 'aoc09.input')
{
    my @series = $inputfile.lines.map: -> $l { Series.new(:values($l.&ints)) }
    say 'Part 1: the sum of the extrapolated values is ', @series».next.sum;
    say 'Part 2: the sum of the backwards extrapolated values is ', @series».prev.sum;
}
