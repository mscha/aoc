#!/usr/bin/env perl6
use v6.c;

$*OUT.out-buffer = False;   # Autoflush

class MarbleGame
{
    has $.num-players;
    has $.highest-marble;

    has @!circle = 0;
    has $!player = 0;
    has @!scores = 0 xx $!num-players;
    has $!position = 0;

    method play
    {
        for 1..$!highest-marble -> $marble {
            if $marble %% 23 {
                $!position = ($!position - 7) % @!circle;
                @!scores[$!player] += $marble + @!circle[$!position];
                @!circle.splice($!position, 1);
            }
            else {
                $!position = ($!position + 2) % @!circle;
                @!circle.splice($!position, 0, $marble);
            }
            $!player = ($!player + 1) % $!num-players;
        }
    }

    method winning-score
    {
        self.play if @!circle < 2;
        return @!scores.max;
    }
}

#| Play marble game
multi sub MAIN(Int $highest-marble is copy, Int $num-players)
{
    say "With $num-players players and $highest-marble marbles, the winning score is: ",
        MarbleGame.new(:$num-players, :$highest-marble).winning-score;
    $highest-marble ×= 100;
    say "With $num-players players and $highest-marble marbles, the winning score is: ",
        MarbleGame.new(:$num-players, :$highest-marble).winning-score;
}

#| Get game parameters from a file
multi sub MAIN(Str $inputfile where *.IO.f)
{
    my ($num-players, $highest-marble) = $inputfile.IO.slurp.comb(/\d+/)».Int;
    MAIN($highest-marble, $num-players);
}

#| Get game parameters from the default file (aoc09.input)
multi sub MAIN()
{
    MAIN(~$*PROGRAM.sibling('aoc09.input'));
}
